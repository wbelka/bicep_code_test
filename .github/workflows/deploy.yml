name: 'Deploy Azure Infrastructure'

on:
  workflow_dispatch:

jobs:
  deploy-resources:
    name: 'Deploy Resources Stack'
    uses: ./.github/workflows/reusable-deploy-bicep.yml
    with:
      stackName: 'resources-stack'
      templateFile: './infra/resources/main-dev-resources.bicep'
      parametersFile: './infra/resources/parameters-dev-resources.json'
      deploymentScope: 'subscription'
      location: 'westeurope' # Location for stack metadata
    secrets: inherit

  deploy-hub-network:
    name: 'Deploy Hub Network Stack'
    needs: deploy-resources
    uses: ./.github/workflows/reusable-deploy-bicep.yml
    id: hub-network # Add an ID to reference outputs
    with:
      stackName: 'hub-network-stack'
      templateFile: './infra/network/main-hub.bicep'
      parametersFile: './infra/network/parameters-hub.json'
      deploymentScope: 'resourceGroup'
      resourceGroupName: ${{ fromJson(needs.deploy-resources.outputs.stackOutputs).resourceGroupName.value }}
      parameters: 'adminSourceAddressPrefix=${{ secrets.ADMIN_SOURCE_ADDRESS_PREFIX }}'
    secrets: inherit

  deploy-spoke-network:
    name: 'Deploy Spoke Network Stack'
    needs: [deploy-resources, deploy-hub-network]
    uses: ./.github/workflows/reusable-deploy-bicep.yml
    id: spoke-network # Add an ID to reference outputs
    with:
      stackName: 'spoke-network-stack'
      templateFile: './infra/network/main-spoke.bicep'
      parametersFile: './infra/network/parameters-spoke.json'
      deploymentScope: 'resourceGroup'
      resourceGroupName: ${{ fromJson(needs.deploy-resources.outputs.stackOutputs).resourceGroupName.value }}
      parameters: >-
        hubVnetId=${{ fromJson(needs.deploy-hub-network.outputs.stackOutputs).hubVnetId.value }}
        hubVnetName=${{ fromJson(needs.deploy-hub-network.outputs.stackOutputs).hubVnetName.value }}
        firewallPrivateIp=${{ fromJson(needs.deploy-hub-network.outputs.stackOutputs).firewallPrivateIp.value }}
        hubResourceGroupName=${{ fromJson(needs.deploy-resources.outputs.stackOutputs).resourceGroupName.value }}
    secrets: inherit

  deploy-app:
    name: 'Deploy Application Stack'
    needs: [deploy-resources, deploy-hub-network, deploy-spoke-network]
    uses: ./.github/workflows/reusable-deploy-bicep.yml
    with:
      stackName: 'app-stack'
      templateFile: './infra/app/main-dev-app.bicep'
      parametersFile: './infra/app/parameters-dev-app.json'
      deploymentScope: 'resourceGroup'
      resourceGroupName: ${{ fromJson(needs.deploy-resources.outputs.stackOutputs).resourceGroupName.value }}
      parameters: >-
        hubVnetId=${{ fromJson(needs.deploy-hub-network.outputs.stackOutputs).hubVnetId.value }}
        spokeVnetId=${{ fromJson(needs.deploy-spoke-network.outputs.stackOutputs).spokeVnetId.value }}
        dbSubnetId=${{ fromJson(needs.deploy-spoke-network.outputs.stackOutputs).dbSubnetId.value }}
        clusterSubnetId=${{ fromJson(needs.deploy-spoke-network.outputs.stackOutputs).aksSubnetId.value }}
        appGwSubnetId=${{ fromJson(needs.deploy-spoke-network.outputs.stackOutputs).appGwSubnetId.value }}
        jumpServerSubnetId=${{ fromJson(needs.deploy-hub-network.outputs.stackOutputs).jumpServerSubnetId.value }}
        keyVaultAdminObjectId=${{ secrets.AZURE_CLIENT_ID_OBJECT_ID }}
        postgresAdminLogin=${{ secrets.POSTGRES_ADMIN_LOGIN }}
        postgresAdminPassword=${{ secrets.POSTGRES_ADMIN_PASSWORD }}
        sslCertSecretValue=${{ secrets.SSL_CERT_SECRET_VALUE }}
        argocdRepoUrl=${{ secrets.ARGOCD_REPO_URL }}
        argocdGitSshKey=${{ secrets.ARGOCD_GIT_SSH_KEY }}
        jumpVmSshPublicKey=${{ secrets.JUMP_VM_SSH_PUBLIC_KEY }}
    secrets: inherit
